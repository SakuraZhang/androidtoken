#summary How to define a new token in Android Token
#labels Featured

= Introduction =

Android Token supports the ability to define multiple tokens, a single instance of Android Token can replace multiple hardware tokens that you would otherwise need to carry.

You can create tokens which are Event Tokens ([http://tools.ietf.org/html/rfc4226 HOTP]) or Time Tokens ([http://tools.ietf.org/html/draft-mraihi-totp-timebased-00 TOTP]) with complete control other the settings for each token.

= Details =

Creating a new token is a two stage process. Firstly you define the basic settings for the token then you entry or generate the seed for the token.

*The seed value is used to generate the OTP value. You should protect the seed value and keep this value private.*

== Step 1 ==

[http://androidtoken.googlecode.com/svn/trunk/docs/images/createStep1.Png]

  # Select the type of token to create, this can either be an Event Token or a Time Token
  # Enter a name for the token, this is the name which will be displayed for the token.
  # Enter a serial number, your server administrator should be able to supply you this value.
  # Select the length of the OTP that the application will generate
  # For Time Tokens you should also set the time step of either 30 seconds or 60 seconds. Your server administrator will be able to supply the correct value.

== Step 2  ==

[http://androidtoken.googlecode.com/svn/trunk/docs/images/createStep2.Png]

You now need to enter the seed value for the token. Here you have three options to entry/generate the seed.

  # *Direct Entry* - Select this option to enter the hexadecimal value used as the seed. This should be either 128 or 160 bit in length
  # *Generate Random Seed* - Select this option to have the application generate a random 160 bit seed value. You will need to write this down and tell you're server administrator this value.
  # *Seed from Password* - This will generate a 160 bit seed using a alphanumeric password. Getting a user to enter a hexadecimal string into the Direct Entry option could be come cumbersome, therefore this is a simple way of generating a seed which is easy to enter for the user. (You can read more about Seed from Password below)

= Server Administrator Guide =

== Seed from Password ==

This is provided as an easy and secure way for the user to generate a seed without having to enter a complex hexadecimal value.

The password is hashed using SHA1 then concatenate with itself before being hashed a second time to generate a seed value of 160 bits.

_h1 = sha1(password)_
_h2 = sha1(password + h1)_